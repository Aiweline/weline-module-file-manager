<!--
================================================================================================================= 
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-file-manager\view\templates\file-select.phtml START
=================================================================================================================
 -->
<!-- 图片预览 -->
<!--
============================================================================================================================ 
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-file-manager\view\templates\image-preview\template.phtml START
============================================================================================================================
 -->
<!-- 图片预览 -->
<style media="screen">
    .file-target-preview {
        display: flex;
        flex-direction: row;
        align-items: center;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin-bottom: 0.5rem
    }

    .drag-item {
        display: block;
        position: relative;
        float: left;
        width: <?= $this->getData('width') ?? 50 ?>px;
        height: <?= $this->getData('height') ?? 50 ?>px;
        border: 1px solid #CCC;
    }

    .close {
        position: absolute;
        right: 0;
        width: 17px;
        height: 17px;
        z-index: 1;
        text-align: center;
        line-height: 17px;
        background: transparent;
        opacity: 0.5
    }

    .drag-item:hover .close {
        opacity: 1;
        color: red;
    }

    .drag-pic {
        max-width: 100%;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
    }
</style>
<div id="<?=$target ;?>-preview" class="file-target-preview">
    <?php foreach($value_items  as $k => $v):?>
        <div class="drag-item" draggable="true">
            <div class="close" onclick="delSelectedImage(event)">x</div>
            <img data-src="<?=($v['path']??'') ;?>" src="<?=($v['url']??'') ;?>" alt="<?=($v['pathInfo']['name']??'') ;?>"
                 title="<?=($v['pathInfo']['name']??'') ;?>(<?=($v['pathInfo']['size']??'') ;?>)"
                 class="drag-pic img-responsive"
                 draggable="false"
                 data-file="">
        </div>
    <?php endforeach;?>
</div>
<!-- 图片放大modal -->
<div class="modal fade bs-example-modal-center bd-example-modal-lg" tabindex="-1" role="dialog"
     aria-labelledby="Elfinder" aria-hidden="true" id="<?=$target ;?>-zoom-modal">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-fullscreen-md-down">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    预览
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" id="<?=$target ;?>-zoom-close-modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body" id="zoom-preview-image-body">
                <img src="" alt="" title="">
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!--
========================================================================================================= 
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-taglib\view\taglib\js\drag-sort.phtml START
=========================================================================================================
 -->
<script type="text/javascript">
    function DragSort(_ref) {
        var id = _ref.id, // 需拖动元素父级ID
            drag = _ref.drag, // 拖动的元素class（需  draggable="true" 其中  链接和图像默认是可拖动的）
            times = _ref.times, // 拖动动画时长
            callback = _ref.callback; // 拖动动画时长
        if(!times){
            times = 1000
        }
        this.id = id;
        this.drag = drag;
        this.times = times; // 拖动动画时长
        this.callback = callback; //回调函数
        this.init();
    }

    // 给实例对象添加公共属性和方法
    DragSort.prototype = {
        init: function init() {
            var node = document.getElementById(this.id);
            var dragClass = this.drag, _this = this;
            var draging = null;
            //使用事件委托，将li的事件委托给ul
            node.ondragstart = function(event) {
                // console.log("start");
                draging = event.target;
            }
            node.ondragover = function(event) {
                // console.log("onDrop over");
                event.preventDefault();
                var target = event.target;
                if (!_this.hasClassName(target, dragClass)) {
                    target = target.parentNode
                }
                // 进行属性判断，是否覆盖到移动的标签上
                if (_this.hasClassName(target, dragClass)) {
                    if (target && target.animated) {
                        return;
                    }
                    var targetIndex = _this.index(target), dragingIndex = _this.index(draging), nextNode = '', animateObj = [];
                    if (targetIndex !== dragingIndex) { // 拖拽框位置判断
                        if (targetIndex > dragingIndex) { // 向后拖拽
                            var preIndex = _this.index(draging),
                                nextIndex = _this.index(target),
                                existingnode = target.nextElementSibling;
                        } else { // 向前拖拽
                            var preIndex = _this.index(target),
                                nextIndex = _this.index(draging),
                                existingnode = target;
                        }
                        for (var i = 0; i < nextIndex - preIndex + 1; i++) {
                            nextNode = nextNode === "" ? draging : (targetIndex > dragingIndex ? nextNode.nextElementSibling : nextNode.previousElementSibling);
                            animateObj.push([nextNode.getBoundingClientRect(), nextNode])
                        }
                        target.parentNode.insertBefore(draging, existingnode);
                        for (var i = 0; i < animateObj.length; i++) {
                            _this.animate(animateObj[i][0], animateObj[i][1]);
                        }
                    }
                    if(_this.callback){
                        _this.callback()
                    }
                }
            }
        },
        // 判断是否包含某个class
        hasClassName: function hasClassName(obj, name){
            var tmpName = obj.className;
            var tmpReg = new RegExp(name, 'g');
            return tmpReg.test(tmpName);
        },
        //获取元素在父元素中的index
        index: function _index(el) {
            var index = 0;
            if (!el || !el.parentNode) {
                return -1;
            }
            while (el && (el = el.previousElementSibling)) {
                index++;
            }
            return index;
        },
        // 元素移动
        animate: function _animate(prevRect, target) {
            var ms = this.times;
            var _this = this;
            if (ms) {
                var currentRect = target.getBoundingClientRect();
                if (prevRect.nodeType === 1) {
                    prevRect = prevRect.getBoundingClientRect();
                }
                _this.css(target, 'transition', 'none');
                _this.css(target, 'transform', 'translate3d(' +
                    (prevRect.left - currentRect.left) + 'px,' +
                    (prevRect.top - currentRect.top) + 'px,0)'
                );
                target.offsetWidth; // 触发重绘
                _this.css(target, 'transition', 'all ' + ms + 'ms');
                _this.css(target, 'transform', 'translate3d(0,0,0)');

                clearTimeout(target.animated);
                target.animated = setTimeout(function() {
                    _this.css(target, 'transition', '');
                    _this.css(target, 'transform', '');
                    target.animated = false;
                }, ms);
            }
        },
        // 给元素添加style
        css: function _css(el, prop, val) {
            var style = el && el.style;

            if (style) {
                if (val === void 0) {
                    if (document.defaultView && document.defaultView.getComputedStyle) {
                        val = document.defaultView.getComputedStyle(el, '');
                    } else if (el.currentStyle) {
                        val = el.currentStyle;
                    }
                    return prop === void 0 ? val : val[prop];
                } else {
                    if (!(prop in style)) {
                        prop = '-webkit-' + prop;
                    }
                    style[prop] = val + (typeof val === 'string' ? '' : 'px');
                }
            }
        }
    };
</script>
<!--使用方式：
<script type="text/javascript" >
    var dragSort = new DragSort({
        id : 'drag-div', // 拖动父级div框的ID
        drag: 'drag-item', //拖动元素
        times: '1000', // 动画时长（默认一秒钟）
    })
    function add(event) {
        var node = document.getElementById('drag-div')
        var wrapper= document.createElement('div');
        wrapper.innerHTML= '<div class="drag-item" draggable="true"> <div class="close" onclick="del(event)">x</div> <img src="./img/9.jpg" class="drag-pic" draggable="false"> </div>';
        var html= wrapper.firstChild;
        node.appendChild(html)
    }
    function del(event) {
        // 点击删除当前元素的父级元素
        event.currentTarget.parentElement.parentElement.removeChild(event.currentTarget.parentElement);
    }
</script>
-->
<!--
===========================================================================================================================
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-taglib\view\tpl\\zh_Hans_CN\taglib\js\com_drag-sort.phtml END
===========================================================================================================================
-->
<script type="text/javascript">
    var dragSort = new DragSort({
        id: '<?=$target ;?>-preview', // 拖动父级div框的ID
        drag: 'drag-item', //拖动元素
        times: '1000', // 动画时长（默认一秒钟）
        callback: function () {
            flushSelectedImage();
        }
    })

    function addSelectedImage(event) {
        var node = document.getElementById('<?=$target ;?>-preview')
        var wrapper = document.createElement('div');
        wrapper.innerHTML = `
        <div class="drag-item" draggable="true">
            <div class="close" onclick="delSelectedImage(event)">x</div>
            <img data-src="" src="" alt="" class="drag-pic img-responsive" draggable="false" data-file="">
        </div>
`;
        var html = wrapper.firstChild;
        node.appendChild(html)
    }

    function delSelectedImage(event) {
        // 点击删除当前元素的父级元素
        event.currentTarget.parentElement.parentElement.removeChild(event.currentTarget.parentElement);
        // 刷新目标value
        flushSelectedImage()
    }

    function flushSelectedImage() {
        // 刷新目标value
        let urls = '';
        let imgs = $('#<?=$target ;?>-preview').find('img')
        for (let i = 0; i < imgs.length; i++) {
            if (urls) {
                urls += ','
            }
            urls += imgs[i].getAttribute('data-src')
        }
        $('#<?=$target ;?>').val(urls).trigger('change').trigger('input')
    }

    flushSelectedImage()

    $('#<?=$target ;?>-preview').on('click', 'img', function () {
        let src = '/pub/media/' + $(this).attr('data-src');
        let zoomModal = $('#<?=$target ;?>-zoom-modal');
        let zoomPreviewImageBody = $('#zoom-preview-image-body');
        zoomPreviewImageBody.empty()
        zoomPreviewImageBody.append(`<img src="${src}" class="img-fluid" alt="">`)
        zoomModal.modal('show')
    })
</script>
<!--
==============================================================================================================================================
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-file-manager\view\tpl\\zh_Hans_CN\templates\image-preview\com_template.phtml END
==============================================================================================================================================
-->
<!-- Small modal -->
<a type="button" data-bs-target="#<?=$target ;?>-select-modal" class="btn btn-primary btn-sm waves-effect waves-light"
   data-bs-toggle="modal"><?=$title ;?></a>
<?php if($ext !== '*' ):?><br><span>允许的文件类型：(<?=$ext ;?>)</span><?php endif;?>
<br>
<span>允许的文件大小：<?=$size_alias ;?></span>
<div class="modal fade bs-example-modal-center bd-example-modal-lg" tabindex="-1" role="dialog"
     aria-labelledby="Elfinder" aria-hidden="true" id="<?=$target ;?>-select-modal">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-fullscreen-md-down">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <?=$title ;?> <?php if($ext !== '*' ):?><span class="text-danger">允许的文件类型：(<?=$ext ;?>)</span><?php endif;?>
                    <span>允许的文件大小：<?=$size_alias ;?></span>
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" id="<?=$target ;?>-close-modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 0">
                <iframe id="<?=$target ;?>-file-manager-iframe" class="w-100" src="" scrolling="no"
                        frameborder="0"></iframe>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<script>
    var timer = null;
    $('#<?=$target ;?>-select-modal').on('shown.bs.modal', () => {
        let iframe = $("#<?=$target ;?>-file-manager-iframe");
        if (iframe.attr('src') === '') {
            iframe.attr('src', '<?=$connector ;?>')
        }

        function checkIframeLoaded() {
            let iframe = $("#<?=$target ;?>-file-manager-iframe");
            // Get a handle to the iframe element
            // console.log(iframe)
            let iframeDoc = iframe[0].contentDocument || undefined;
            if (iframeDoc === undefined && iframe[0].contentWindow) {
                iframeDoc = iframe[0].contentWindow.document;
            }
            if (iframeDoc !== undefined && iframeDoc.readyState === 'complete') {
                let elfinder = $(iframeDoc).find('#elfinder');
                if (elfinder.length > 0) {
                    let style = elfinder.attr('style')
                    if (style) {
                        iframe.css({height: elfinder.height() + 10 + 'px'})
                        clearInterval(timer)
                    }
                }
            }
        }

        timer = window.setInterval(() => {
            checkIframeLoaded()
        }, 100);
    })
    // 点击预览
    $('#<?=$target ;?>-preview').on('click', '.img', function () {
        let url = $(this).data('url')
        let iframe = $("#<?=$target ;?>-file-manager-iframe");
        iframe.attr('src', url)
    })
</script>
<!--
===================================================================================================================================
模板文件：F:\WelineFramework\Gvanda\vendor\weline\module-file-manager\view\tpl\\zh_Hans_CN\templates\com_file-select.phtml END
===================================================================================================================================
-->